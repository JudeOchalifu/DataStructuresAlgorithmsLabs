{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww11400\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 16.2 The edges in an undirected graph go both ways so that in an edge between A and B, we can go from A to B and B to A.  In a directed graph, edges only go in one direction, which means that we could only go from A to B or B to A exclusively (unless we create two edges in both directions)\
\
16.10 ? \
\
Problems \
\
16.2: \
	\
Adjacency Matrix \
\
\
	destination a b c d \
source\
a                               F T T F\
b		         F  F T T\
c		         F  F F  F\
d		         T  T T F\
\
Adjacency List \
A (B  -> ) (C .)\
B (C ->) (D .)\
C (.)\
D (A ->) (B ->) (C.)\
\
16.10:\
\
isSink method for GraphMatrix \
- given a vertex b in a graphMatrix.  Traverse the row of vertex b, given by a call to vertex b's index.  If any of the entries in the graph matrix in the given row returned by vertex b is true, it means that b is the source vertex to another and is therefore not a sink.  Return false in that case.  Otherwise, if none of the entires is true, return true (b is sink)\
\
isSink method for GraphList\
- much easier.  Since the vertices in the the graph list store a list of edges from the given vertex to another, we merely check whether or not the list is empty.  If empty, return true.  \
}